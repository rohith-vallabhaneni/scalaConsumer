format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/ubuntu/Scala/pact-scala/consumer/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/Scala/pact-scala/consumer/target/scala-2.12/test-classes/com/example/consumer/ConsumerClientSpec.class
binary dependencies:
6 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/com.itv/scalapact-scalatest_2.12/jars/scalapact-scalatest_2.12-2.1.3.jar
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/org.json4s/json4s-core_2.12/jars/json4s-core_2.12-3.5.0.jar
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/org.json4s/json4s-native_2.12/jars/json4s-native_2.12-3.5.0.jar
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> /home/ubuntu/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
3 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> com.example.consumer.ConsumerClient$
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> com.example.consumer.User
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> com.example.consumer.User$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> com.example.consumer.ConsumerClientSpec
used names:
78 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> <byname>
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> <init>
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> <repeated>
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> A
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Any
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> AnyRef
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> AnyShouldWrapper
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Assertion
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Boolean
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ConsumerClient
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ConsumerClientSpec
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> DefaultFormats
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Equality
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Formats
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> FunSpec
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Function1
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Int
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ItWord
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Matchers
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Nothing
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Option
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Position
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Predef
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Prettifier
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPactDescription
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPactForger
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPactInteraction
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPactMockConfig
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPactOptions
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> ScalaPartialPact
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Serialization
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> String
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> StringShouldWrapper
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> T
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Tag
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> Unit
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> User
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> addInteraction
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> and
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> apply
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> baseUrl
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> between
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> body
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> com
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> consumer
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> convertToAnyShouldWrapper
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> convertToStringShouldWrapper
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> default
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> describe
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> description
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> example
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> fetchUser
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> forgePact
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> formats
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> get
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> here
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> id
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> interaction
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> isDefined
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> it
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> itv
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> json4s
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> mockConfig
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> name
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> native
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> options
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> org
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> package
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> results
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> runConsumerTest
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> scalactic
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> scalapact
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> scalatest
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> shouldEqual
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> source
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> uponReceiving
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> willRespondWith
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> write
product stamps:
1 items
/home/ubuntu/Scala/pact-scala/consumer/target/scala-2.12/test-classes/com/example/consumer/ConsumerClientSpec.class -> lastModified(1505990299000)
source stamps:
1 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> hash(8c8ad6671e9fc1e3cc584ee77342274392a73b92)
binary stamps:
6 items
/home/ubuntu/.ivy2/cache/com.itv/scalapact-scalatest_2.12/jars/scalapact-scalatest_2.12-2.1.3.jar -> lastModified(1490369400000)
/home/ubuntu/.ivy2/cache/org.json4s/json4s-core_2.12/jars/json4s-core_2.12-3.5.0.jar -> lastModified(1478269079000)
/home/ubuntu/.ivy2/cache/org.json4s/json4s-native_2.12/jars/json4s-native_2.12-3.5.0.jar -> lastModified(1478268969000)
/home/ubuntu/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/home/ubuntu/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/home/ubuntu/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> lastModified(1478056290000)
class names:
6 items
/home/ubuntu/.ivy2/cache/com.itv/scalapact-scalatest_2.12/jars/scalapact-scalatest_2.12-2.1.3.jar -> com.itv.scalapact.ScalaPactForger$
/home/ubuntu/.ivy2/cache/org.json4s/json4s-core_2.12/jars/json4s-core_2.12-3.5.0.jar -> org.json4s.DefaultFormats
/home/ubuntu/.ivy2/cache/org.json4s/json4s-native_2.12/jars/json4s-native_2.12-3.5.0.jar -> org.json4s.native.Serialization$
/home/ubuntu/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Predef$
/home/ubuntu/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Equality
/home/ubuntu/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> org.scalatest.Matchers
internal apis:
1 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> 

external apis:
3 items
com.example.consumer.ConsumerClient$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwUZa4DQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPWClxnQABm5vdGlmeXNxAH4ADLQC5sl0AARuYW1lc3EAfgAMMzwJ4HQABHdhaXRzcQB+AAydFiaVdAAOY29weSRkZWZhdWx0JDJzcQB+AAzQdWYqdAANJGFzSW5zdGFuY2VPZnNxAH4ADDSuxhh0AAxwcm9kdWN0QXJpdHlzcQB+AAwVww1UdAAGZXF1YWxzc3EAfgAMzykwqXQADGFzSW5zdGFuY2VPZnNxAH4ADBFNmGN0AAxzeW5jaHJvbml6ZWRzcQB+AAxBNIF2dAANJGlzSW5zdGFuY2VPZnNxAH4ADBmrRTx0AAhjYW5FcXVhbHNxAH4ADAxTkL10AA1wcm9kdWN0UHJlZml4c3EAfgAMm7xEx3QACW5vdGlmeUFsbHNxAH4ADAgzBkB0AAxpc0luc3RhbmNlT2ZzcQB+AAy2c3UMdAAGPGluaXQ+c3EAfgAMDoNyC3QAAmlkc3EAfgAMmiTvNXQACWZldGNoVXNlcnNxAH4ADDNI6Lh0AAI9PXNxAH4ADIfKAnN0AA5Db25zdW1lckNsaWVudHNxAH4ADMw6bYZ0AAVjbG9uZXNxAH4ADK5MVWx0AAYkaW5pdCRzcQB+AAwLcCZ1dAAEVXNlcnNxAH4ADL1wrG10AARjb3B5c3EAfgAMPo5GmXQACHRvU3RyaW5nc3EAfgAMlj+dpHQAAiE9c3EAfgAM12Rv+XQACGdldENsYXNzc3EAfgAMNwDarXQADmNvcHkkZGVmYXVsdCQxc3EAfgAMUw2bfnQAAm5lc3EAfgAM2xTonnQAAmVxc3EAfgAMAn5fVHQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADILm0w10AAIjI3NxAH4ADGpa1XZ0AAhmaW5hbGl6ZXNxAH4ADM3boxt0AA5wcm9kdWN0RWxlbWVudHNxAH4ADGOI3j10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACNjb20uZXhhbXBsZS5jb25zdW1lci5Db25zdW1lckNsaWVudHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Ac3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBbTAAJaW5oZXJpdGVkcQB+AFtMAAdwYXJlbnRzcQB+AFt4cQB+AHhzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ad3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ad3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AkHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AkXNxAH4AhHQAA0FueXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJB0AAVzY2FsYXEAfgCXc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAGWNvbS5leGFtcGxlLmNvbnN1bWVyLlVzZXJ1cQB+AGsAAAAAfnEAfgBtdAAIQ2xhc3NEZWZ1cQB+AHEAAAAAc3EAfgBzcQB+AHlzcQB+AHNzcQB+AHtzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AggAAAAZzcQB+AIR0AAxTZXJpYWxpemFibGVzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHQAB1Byb2R1Y3RxAH4AsnNxAH4AhHQABkVxdWFsc3EAfgCyc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAFGNvbS5leGFtcGxlLmNvbnN1bWVyc3EAfgDKdAALY29tLmV4YW1wbGVzcQB+AMp0AANjb21zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV6kBDGFdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAQC9ob21lL3VidW50dS9TY2FsYS9wYWN0LXNjYWxhL2NvbnN1bWVyL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABThTcYV0Szq6ifHiTFg8J+QT5pCBg==
com.example.consumer.User -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwUZa4DQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPWClxnQABm5vdGlmeXNxAH4ADLQC5sl0AARuYW1lc3EAfgAMMzwJ4HQABHdhaXRzcQB+AAydFiaVdAAOY29weSRkZWZhdWx0JDJzcQB+AAzQdWYqdAANJGFzSW5zdGFuY2VPZnNxAH4ADDSuxhh0AAxwcm9kdWN0QXJpdHlzcQB+AAwVww1UdAAGZXF1YWxzc3EAfgAMzykwqXQADGFzSW5zdGFuY2VPZnNxAH4ADBFNmGN0AAxzeW5jaHJvbml6ZWRzcQB+AAxBNIF2dAANJGlzSW5zdGFuY2VPZnNxAH4ADBmrRTx0AAhjYW5FcXVhbHNxAH4ADAxTkL10AA1wcm9kdWN0UHJlZml4c3EAfgAMm7xEx3QACW5vdGlmeUFsbHNxAH4ADAgzBkB0AAxpc0luc3RhbmNlT2ZzcQB+AAy2c3UMdAAGPGluaXQ+c3EAfgAMDoNyC3QAAmlkc3EAfgAMmiTvNXQACWZldGNoVXNlcnNxAH4ADDNI6Lh0AAI9PXNxAH4ADIfKAnN0AA5Db25zdW1lckNsaWVudHNxAH4ADMw6bYZ0AAVjbG9uZXNxAH4ADK5MVWx0AAYkaW5pdCRzcQB+AAwLcCZ1dAAEVXNlcnNxAH4ADL1wrG10AARjb3B5c3EAfgAMPo5GmXQACHRvU3RyaW5nc3EAfgAMlj+dpHQAAiE9c3EAfgAM12Rv+XQACGdldENsYXNzc3EAfgAMNwDarXQADmNvcHkkZGVmYXVsdCQxc3EAfgAMUw2bfnQAAm5lc3EAfgAM2xTonnQAAmVxc3EAfgAMAn5fVHQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADILm0w10AAIjI3NxAH4ADGpa1XZ0AAhmaW5hbGl6ZXNxAH4ADM3boxt0AA5wcm9kdWN0RWxlbWVudHNxAH4ADGOI3j10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACNjb20uZXhhbXBsZS5jb25zdW1lci5Db25zdW1lckNsaWVudHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Ac3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBbTAAJaW5oZXJpdGVkcQB+AFtMAAdwYXJlbnRzcQB+AFt4cQB+AHhzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ad3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ad3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AkHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AkXNxAH4AhHQAA0FueXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJB0AAVzY2FsYXEAfgCXc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAGWNvbS5leGFtcGxlLmNvbnN1bWVyLlVzZXJ1cQB+AGsAAAAAfnEAfgBtdAAIQ2xhc3NEZWZ1cQB+AHEAAAAAc3EAfgBzcQB+AHlzcQB+AHNzcQB+AHtzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AggAAAAZzcQB+AIR0AAxTZXJpYWxpemFibGVzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHQAB1Byb2R1Y3RxAH4AsnNxAH4AhHQABkVxdWFsc3EAfgCyc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAFGNvbS5leGFtcGxlLmNvbnN1bWVyc3EAfgDKdAALY29tLmV4YW1wbGVzcQB+AMp0AANjb21zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV6kBDGFdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAQC9ob21lL3VidW50dS9TY2FsYS9wYWN0LXNjYWxhL2NvbnN1bWVyL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABThTcYV0Szq6ifHiTFg8J+QT5pCBg==
com.example.consumer.User$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwUZa4DQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPWClxnQABm5vdGlmeXNxAH4ADLQC5sl0AARuYW1lc3EAfgAMMzwJ4HQABHdhaXRzcQB+AAydFiaVdAAOY29weSRkZWZhdWx0JDJzcQB+AAzQdWYqdAANJGFzSW5zdGFuY2VPZnNxAH4ADDSuxhh0AAxwcm9kdWN0QXJpdHlzcQB+AAwVww1UdAAGZXF1YWxzc3EAfgAMzykwqXQADGFzSW5zdGFuY2VPZnNxAH4ADBFNmGN0AAxzeW5jaHJvbml6ZWRzcQB+AAxBNIF2dAANJGlzSW5zdGFuY2VPZnNxAH4ADBmrRTx0AAhjYW5FcXVhbHNxAH4ADAxTkL10AA1wcm9kdWN0UHJlZml4c3EAfgAMm7xEx3QACW5vdGlmeUFsbHNxAH4ADAgzBkB0AAxpc0luc3RhbmNlT2ZzcQB+AAy2c3UMdAAGPGluaXQ+c3EAfgAMDoNyC3QAAmlkc3EAfgAMmiTvNXQACWZldGNoVXNlcnNxAH4ADDNI6Lh0AAI9PXNxAH4ADIfKAnN0AA5Db25zdW1lckNsaWVudHNxAH4ADMw6bYZ0AAVjbG9uZXNxAH4ADK5MVWx0AAYkaW5pdCRzcQB+AAwLcCZ1dAAEVXNlcnNxAH4ADL1wrG10AARjb3B5c3EAfgAMPo5GmXQACHRvU3RyaW5nc3EAfgAMlj+dpHQAAiE9c3EAfgAM12Rv+XQACGdldENsYXNzc3EAfgAMNwDarXQADmNvcHkkZGVmYXVsdCQxc3EAfgAMUw2bfnQAAm5lc3EAfgAM2xTonnQAAmVxc3EAfgAMAn5fVHQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADILm0w10AAIjI3NxAH4ADGpa1XZ0AAhmaW5hbGl6ZXNxAH4ADM3boxt0AA5wcm9kdWN0RWxlbWVudHNxAH4ADGOI3j10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACNjb20uZXhhbXBsZS5jb25zdW1lci5Db25zdW1lckNsaWVudHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Ac3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBbTAAJaW5oZXJpdGVkcQB+AFtMAAdwYXJlbnRzcQB+AFt4cQB+AHhzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ad3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ad3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AkHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AkXNxAH4AhHQAA0FueXNxAH4AiHNxAH4Ai3VxAH4AjgAAAAJzcQB+AJB0AAVzY2FsYXEAfgCXc3EAfgBYcQB+AGV1cQB+AGYAAAAAc3EAfgBoAHQAGWNvbS5leGFtcGxlLmNvbnN1bWVyLlVzZXJ1cQB+AGsAAAAAfnEAfgBtdAAIQ2xhc3NEZWZ1cQB+AHEAAAAAc3EAfgBzcQB+AHlzcQB+AHNzcQB+AHtzcQB+AHN1cQB+AFYAAAAAc3EAfgBzdXEAfgBWAAAAAHNxAH4Ac3VxAH4AggAAAAZzcQB+AIR0AAxTZXJpYWxpemFibGVzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3NxAH4AhHEAfgCxc3EAfgCIc3EAfgCLdXEAfgCOAAAAA3NxAH4AkHEAfgCTc3EAfgCQdAACaW9xAH4Al3NxAH4AhHQAB1Byb2R1Y3RxAH4AsnNxAH4AhHQABkVxdWFsc3EAfgCyc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlxAH4AsnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAFGNvbS5leGFtcGxlLmNvbnN1bWVyc3EAfgDKdAALY29tLmV4YW1wbGVzcQB+AMp0AANjb21zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV6kBDGFdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAQC9ob21lL3VidW50dS9TY2FsYS9wYWN0LXNjYWxhL2NvbnN1bWVyL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABThTcYV0Szq6ifHiTFg8J+QT5pCBg==
source infos:
1 items
/home/ubuntu/Scala/pact-scala/consumer/src/test/scala/com/example/consumer/ProviderClientSpec.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXqQESZ91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARS9ob21lL3VidW50dS9TY2FsYS9wYWN0LXNjYWxhL2NvbnN1bWVyL3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
